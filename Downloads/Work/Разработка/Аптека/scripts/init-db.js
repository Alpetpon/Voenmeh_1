const { Pool } = require('pg');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
const pool = new Pool({
  user: process.env.DB_USER || 'postgres',
  host: process.env.DB_HOST || 'localhost',
  database: process.env.DB_NAME || 'ecolife_pharmacy',
  password: process.env.DB_PASSWORD || 'password',
  port: parseInt(process.env.DB_PORT || '5432'),
});

// SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
const createTablesSQL = `
-- –¢–∞–±–ª–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
CREATE TABLE IF NOT EXISTS categories (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  slug VARCHAR(255) UNIQUE NOT NULL,
  description TEXT,
  icon VARCHAR(100),
  parent_id INTEGER REFERENCES categories(id),
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);

-- –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤
CREATE TABLE IF NOT EXISTS products (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  slug VARCHAR(255) UNIQUE NOT NULL,
  description TEXT,
  price DECIMAL(10,2) NOT NULL,
  old_price DECIMAL(10,2),
  category_id INTEGER REFERENCES categories(id),
  brand VARCHAR(255),
  form VARCHAR(100),
  prescription_required BOOLEAN DEFAULT false,
  in_stock BOOLEAN DEFAULT true,
  stock_quantity INTEGER DEFAULT 0,
  images TEXT[],
  instructions TEXT,
  contraindications TEXT,
  side_effects TEXT,
  composition TEXT,
  dosage VARCHAR(255),
  storage_conditions TEXT,
  expiry_date DATE,
  is_active BOOLEAN DEFAULT true,
  rating DECIMAL(3,2) DEFAULT 0,
  reviews_count INTEGER DEFAULT 0,
  search_vector TSVECTOR,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);

-- –¢–∞–±–ª–∏—Ü–∞ –∞–ø—Ç–µ–∫
CREATE TABLE IF NOT EXISTS stores (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  address TEXT NOT NULL,
  city VARCHAR(100) NOT NULL,
  phone VARCHAR(20),
  email VARCHAR(255),
  latitude DECIMAL(10,8),
  longitude DECIMAL(11,8),
  working_hours JSONB,
  services TEXT[],
  has_parking BOOLEAN DEFAULT false,
  is_24h BOOLEAN DEFAULT false,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);

-- –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE IF NOT EXISTS users (
  id SERIAL PRIMARY KEY,
  email VARCHAR(255) UNIQUE NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  first_name VARCHAR(100),
  last_name VARCHAR(100),
  phone VARCHAR(20),
  birth_date DATE,
  is_verified BOOLEAN DEFAULT false,
  role VARCHAR(20) DEFAULT 'customer',
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);

-- –¢–∞–±–ª–∏—Ü–∞ –∑–∞–ø–∏—Å–µ–π –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
CREATE TABLE IF NOT EXISTS appointments (
  id SERIAL PRIMARY KEY,
  user_id INTEGER REFERENCES users(id),
  store_id INTEGER REFERENCES stores(id),
  customer_name VARCHAR(255) NOT NULL,
  customer_phone VARCHAR(20) NOT NULL,
  customer_email VARCHAR(255),
  appointment_date DATE NOT NULL,
  appointment_time TIME NOT NULL,
  service_type VARCHAR(100) NOT NULL,
  status VARCHAR(20) DEFAULT 'pending',
  notes TEXT,
  pharmacist_name VARCHAR(255),
  created_at TIMESTAMP DEFAULT NOW(),
  updated_at TIMESTAMP DEFAULT NOW()
);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
CREATE INDEX IF NOT EXISTS idx_products_search ON products USING GIN(search_vector);
CREATE INDEX IF NOT EXISTS idx_products_category ON products(category_id);
CREATE INDEX IF NOT EXISTS idx_stores_location ON stores(latitude, longitude);
CREATE INDEX IF NOT EXISTS idx_products_name ON products(name);
CREATE INDEX IF NOT EXISTS idx_products_brand ON products(brand);
CREATE INDEX IF NOT EXISTS idx_stores_city ON stores(city);
`;

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const insertTestDataSQL = `
-- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
INSERT INTO categories (name, slug, description, icon) VALUES
('–õ–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã', 'medicines', '–†–µ—Ü–µ–ø—Ç—É—Ä–Ω—ã–µ –∏ –±–µ–∑—Ä–µ—Ü–µ–ø—Ç—É—Ä–Ω—ã–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞', 'pill'),
('–í–∏—Ç–∞–º–∏–Ω—ã –∏ –ë–ê–î—ã', 'vitamins', '–í–∏—Ç–∞–º–∏–Ω—ã, –º–∏–Ω–µ—Ä–∞–ª—ã –∏ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏', 'vitamin'),
('–ö–æ—Å–º–µ—Ç–∏–∫–∞ –∏ —É—Ö–æ–¥', 'cosmetics', '–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏ —Ç–æ–≤–∞—Ä—ã –¥–ª—è —É—Ö–æ–¥–∞', 'cosmetic'),
('–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∏–∑–¥–µ–ª–∏—è', 'medical-devices', '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–∏–±–æ—Ä—ã –∏ –∏–∑–¥–µ–ª–∏—è', 'device'),
('–î–µ—Ç—Å–∫–∏–µ —Ç–æ–≤–∞—Ä—ã', 'baby', '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π –∏ –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã—Ö', 'baby')
ON CONFLICT (slug) DO NOTHING;

-- –¢–æ–≤–∞—Ä—ã
INSERT INTO products (name, slug, description, price, old_price, category_id, brand, form, prescription_required, in_stock, images, rating, reviews_count) VALUES
('–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª 500–º–≥', 'paracetamol-500mg', '–ñ–∞—Ä–æ–ø–æ–Ω–∏–∂–∞—é—â–µ–µ –∏ –æ–±–µ–∑–±–æ–ª–∏–≤–∞—é—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ', 89.50, 120.00, 1, '–§–∞—Ä–º—Å—Ç–∞–Ω–¥–∞—Ä—Ç', '–¢–∞–±–ª–µ—Ç–∫–∏', false, true, ARRAY['/images/paracetamol.jpg'], 4.5, 156),
('–í–∏—Ç–∞–º–∏–Ω D3 2000 –ú–ï', 'vitamin-d3-2000', '–í–∏—Ç–∞–º–∏–Ω D3 –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –∫–æ—Å—Ç–µ–π', 450.00, NULL, 2, 'Solgar', '–ö–∞–ø—Å—É–ª—ã', false, true, ARRAY['/images/vitamin-d3.jpg'], 4.8, 89),
('–ö—Ä–µ–º –¥–ª—è –ª–∏—Ü–∞ —É–≤–ª–∞–∂–Ω—è—é—â–∏–π', 'face-cream-moisturizing', '–£–≤–ª–∞–∂–Ω—è—é—â–∏–π –∫—Ä–µ–º –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —É—Ö–æ–¥–∞', 320.00, 380.00, 3, 'La Roche-Posay', '–ö—Ä–µ–º', false, true, ARRAY['/images/face-cream.jpg'], 4.3, 67),
('–¢–æ–Ω–æ–º–µ—Ç—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π', 'tonometer-automatic', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–Ω–æ–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏—è', 2890.00, NULL, 4, 'Omron', '–ü—Ä–∏–±–æ—Ä', false, true, ARRAY['/images/tonometer.jpg'], 4.7, 234),
('–î–µ—Ç—Å–∫–∞—è —Å–º–µ—Å—å NAN', 'baby-formula-nan', '–î–µ—Ç—Å–∫–∞—è –º–æ–ª–æ—á–Ω–∞—è —Å–º–µ—Å—å —Å —Ä–æ–∂–¥–µ–Ω–∏—è', 680.00, NULL, 5, 'Nestle', '–°–º–µ—Å—å', false, true, ARRAY['/images/baby-formula.jpg'], 4.6, 123),
('–ò–±—É–ø—Ä–æ—Ñ–µ–Ω 400–º–≥', 'ibuprofen-400mg', '–ü—Ä–æ—Ç–∏–≤–æ–≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω–æ–µ –∏ –æ–±–µ–∑–±–æ–ª–∏–≤–∞—é—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ', 125.00, NULL, 1, '–ë–æ—Ä–∏—Å–æ–≤—Å–∫–∏–π –ó–ú–ü', '–¢–∞–±–ª–µ—Ç–∫–∏', false, true, ARRAY['/images/ibuprofen.jpg'], 4.4, 98),
('–û–º–µ–≥–∞-3', 'omega-3', '–ü–æ–ª–∏–Ω–µ–Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ –∂–∏—Ä–Ω—ã–µ –∫–∏—Å–ª–æ—Ç—ã', 890.00, 1200.00, 2, 'Nordic Naturals', '–ö–∞–ø—Å—É–ª—ã', false, true, ARRAY['/images/omega-3.jpg'], 4.9, 156),
('–®–∞–º–ø—É–Ω—å –ª–µ—á–µ–±–Ω—ã–π', 'therapeutic-shampoo', '–õ–µ—á–µ–±–Ω—ã–π —à–∞–º–ø—É–Ω—å –ø—Ä–æ—Ç–∏–≤ –ø–µ—Ä—Ö–æ—Ç–∏', 450.00, NULL, 3, 'Vichy', '–®–∞–º–ø—É–Ω—å', false, true, ARRAY['/images/shampoo.jpg'], 4.2, 45)
ON CONFLICT (slug) DO NOTHING;

-- –ê–ø—Ç–µ–∫–∏
INSERT INTO stores (name, address, city, phone, latitude, longitude, services, has_parking, is_24h, working_hours) VALUES
('–≠–∫–æ–õ–∞–π—Ñ –Ω–∞ –¢–≤–µ—Ä—Å–∫–æ–π', '—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 15', '–ú–æ—Å–∫–≤–∞', '+7 (495) 123-45-67', 55.7558, 37.6176, ARRAY['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∞', '–ò–∑–º–µ—Ä–µ–Ω–∏–µ –¥–∞–≤–ª–µ–Ω–∏—è', '–î–æ—Å—Ç–∞–≤–∫–∞'], true, false, '{"monday": {"open": "08:00", "close": "22:00"}, "tuesday": {"open": "08:00", "close": "22:00"}}'),
('–≠–∫–æ–õ–∞–π—Ñ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è', '–ø—Ä. –ù–µ–≤—Å–∫–∏–π, 28', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '+7 (812) 987-65-43', 59.9311, 30.3609, ARRAY['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∞', '–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è'], false, true, '{}'),
('–≠–∫–æ–õ–∞–π—Ñ –Ω–∞ –ê—Ä–±–∞—Ç–µ', '—É–ª. –ê—Ä–±–∞—Ç, 42', '–ú–æ—Å–∫–≤–∞', '+7 (495) 234-56-78', 55.7520, 37.5924, ARRAY['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∞', '–ò–∑–º–µ—Ä–µ–Ω–∏–µ –¥–∞–≤–ª–µ–Ω–∏—è'], true, false, '{"monday": {"open": "09:00", "close": "21:00"}}'),
('–≠–∫–æ–õ–∞–π—Ñ –°–æ–∫–æ–ª—å–Ω–∏–∫–∏', '—É–ª. –°–æ–∫–æ–ª—å–Ω–∏—á–µ—Å–∫–∞—è, 8', '–ú–æ—Å–∫–≤–∞', '+7 (495) 345-67-89', 55.7887, 37.6693, ARRAY['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∞', '–î–æ—Å—Ç–∞–≤–∫–∞'], false, false, '{"monday": {"open": "08:30", "close": "20:30"}}'),
('–≠–∫–æ–õ–∞–π—Ñ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '—É–ª. –õ–µ–Ω–∏–Ω–∞, 12', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '+7 (343) 456-78-90', 56.8431, 60.6454, ARRAY['–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∞', '–ò–∑–º–µ—Ä–µ–Ω–∏–µ –¥–∞–≤–ª–µ–Ω–∏—è', '–ê–Ω–∞–ª–∏–∑—ã'], true, false, '{"monday": {"open": "08:00", "close": "22:00"}}')
ON CONFLICT DO NOTHING;

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
UPDATE products SET search_vector = to_tsvector('russian', name || ' ' || COALESCE(description, '') || ' ' || COALESCE(brand, ''));
`;

async function initializeDatabase() {
  const client = await pool.connect();
  
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...');
    await client.query(createTablesSQL);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    
    // –í—Å—Ç–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    await client.query(insertTestDataSQL);
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    
    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  } finally {
    client.release();
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
if (require.main === module) {
  initializeDatabase()
    .then(() => {
      console.log('‚ú® –ì–æ—Ç–æ–≤–æ! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
      process.exit(0);
    })
    .catch((error) => {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { initializeDatabase }; 